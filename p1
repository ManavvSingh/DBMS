*****TABLES*****
CREATE TABLE PUBLISHER(
    NAME VARCHAR(18) PRIMARY KEY,
    ADDRESS VARCHAR(10),
    PHONE VARCHAR(10)
);

CREATE TABLE BOOK(
    BOOK_ID INTEGER PRIMARY KEY,
    TITLE VARCHAR(20),
    PUBLISHER_NAME VARCHAR(18), 
    PUB_YEAR NUMBER(4),
    FOREIGN KEY(PUBLISHER_NAME) REFERENCES PUBLISHER(NAME) ON DELETE CASCADE 
);

CREATE TABLE BOOK_AUTHORS(
    BOOK_ID INTEGER,
    AUTHOR_NAME VARCHAR(20),
    PRIMARY KEY(BOOK_ID),
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE
);

CREATE TABLE LIBRARY_BRANCH(
    BRANCH_ID INTEGER PRIMARY KEY,
    BRANCH_NAME VARCHAR(18),
    ADDRESS VARCHAR(15)
);

CREATE TABLE BOOK_COPIES(
    BOOK_ID INTEGER,
    BRANCH_ID INTEGER,
    NO_OF_COPIES INTEGER,
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    FOREIGN KEY(BRANCH_ID) REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE,
    PRIMARY KEY(BOOK_ID, BRANCH_ID)
);

CREATE TABLE BOOK_LENDING(
    BOOK_ID INTEGER,
    BRANCH_ID INTEGER,
    CARD_NO INTEGER,
    DATE_OUT DATE,
    DUE_DATE DATE,
    PRIMARY KEY(BOOK_ID, BRANCH_ID, CARD_NO),
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    FOREIGN KEY(BRANCH_ID) REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE
); 

*******VALUES*********
-- PUBLISHER
INSERT INTO PUBLISHER VALUES ('PEARSON','BANGALORE','9875462530');
INSERT INTO PUBLISHER VALUES ('MCGRAW','NEWDELHI','7845691234');
INSERT INTO PUBLISHER VALUES ('SAPNA','BANGALORE','7845963210');

-- BOOK
INSERT INTO BOOK VALUES (1111,'SE','PEARSON',2005);
INSERT INTO BOOK VALUES (2222,'DBMS','MCGRAW',2004);
INSERT INTO BOOK VALUES (3333,'ANOTOMY','PEARSON',2010);
INSERT INTO BOOK VALUES (4444,'ENCYCLOPEDIA','SAPNA',2010);

-- BOOK_AUTHORS
INSERT INTO BOOK_AUTHORS VALUES (1111,'SOMMERVILLE');
INSERT INTO BOOK_AUTHORS VALUES (2222,'NAVATHE');
INSERT INTO BOOK_AUTHORS VALUES (3333,'HENRY GRAY');
INSERT INTO BOOK_AUTHORS VALUES (4444,'THOMAS');

-- LIBRARY_BRANCH
INSERT INTO LIBRARY_BRANCH VALUES (11,'CENTRAL TECHNICAL','MG ROAD');
INSERT INTO LIBRARY_BRANCH VALUES (22,'MEDICAL','BH ROAD');
INSERT INTO LIBRARY_BRANCH VALUES (33,'CHILDREN','SS PURAM');
INSERT INTO LIBRARY_BRANCH VALUES (44,'SECRETARIAT','SIRAGATE');
INSERT INTO LIBRARY_BRANCH VALUES (55,'GENERAL','JAYANAGAR');

-- BOOK_COPIES
INSERT INTO BOOK_COPIES VALUES (1111,11,5);
INSERT INTO BOOK_COPIES VALUES (3333,22,6);
INSERT INTO BOOK_COPIES VALUES (4444,33,10);
INSERT INTO BOOK_COPIES VALUES (2222,11,12);
INSERT INTO BOOK_COPIES VALUES (4444,55,3);

-- BOOK_LENDING
INSERT INTO BOOK_LENDING VALUES (2222,11,1,'10-JAN-2017','20-AUG-2017');
INSERT INTO BOOK_LENDING VALUES (3333,22,2,'09-JUL-2017','12-AUG-2017');
INSERT INTO BOOK_LENDING VALUES (4444,55,1,'11-APR-2017','09-AUG-2017');
INSERT INTO BOOK_LENDING VALUES (2222,11,5,'09-AUG-2017','19-AUG-2017');
INSERT INTO BOOK_LENDING VALUES (4444,33,1,'10-JUN-2017','15-AUG-2017');
INSERT INTO BOOK_LENDING VALUES (1111,11,1,'12-MAY-2017','10-JUN-2017');
INSERT INTO BOOK_LENDING VALUES (3333,22,1,'10-JUL-2017','15-JUL-2017');

*****QUERIES******
1) Retrieve details of all books in the library â€“ id, title, name of publisher, authors, number of copies in each branch, etc.

SELECT B.BOOK_ID, B.TITLE, PUBLISHER_NAME, AUTHOR_NAME, LB.BRANCH_NAME, BC.NO_OF_COPIES
FROM BOOK B
JOIN BOOK_AUTHORS BA ON B.BOOK_ID = BA.BOOK_ID
JOIN BOOK_COPIES BC ON B.BOOK_ID = BC.BOOK_ID
JOIN LIBRARY_BRANCH LB ON BC.BRANCH_ID = LB.BRANCH_ID;

2) Get the particulars of borrowers who have borrowed more than 3 books, but from Jan 2017 to Jun 2017.

SELECT CARD_NO
FROM BOOK_LENDING
WHERE DATE_OUT BETWEEN '01-JAN-2017' AND '30-JUN-2017'
GROUP BY CARD_NO
HAVING COUNT(*) > 3;

3) Delete a book in BOOK table. Update the contents of other tables to reflect this data manipulation operation.

DELETE FROM BOOK WHERE BOOK_ID = '3333';

4) Partition the BOOK table based on year of publication. Demonstrate its working with a simple query.

CREATE VIEW V_PUBLICATION AS 
SELECT BOOK_ID, TITLE, PUB_YEAR,
       CASE
           WHEN PUB_YEAR < 2000 THEN '1990s'
           WHEN PUB_YEAR < 2010 THEN '2000s'
           ELSE '2010s and later'
       END AS PUB_YEAR_PARTITION
FROM BOOK;

SELECT * FROM V_PUBLICATION;

5) Create a view of all books and its number of copies that are currently available in the Library.

CREATE VIEW BOOKS_AVAILABLE AS 
SELECT B.BOOK_ID, B.TITLE, BC.NO_OF_COPIES
FROM BOOK B
JOIN BOOK_COPIES BC ON B.BOOK_ID = BC.BOOK_ID;
